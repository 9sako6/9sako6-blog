{
  "title": "D - Digit Sum Replace (500点)",
  "description": null,
  "tags": [
    "数学",
    "天啓",
    "競技プログラミング",
    "AtCoder",
    "企業コン",
    "桁和",
    "操作回数",
    "独立性"
  ],
  "created_at": "2019-11-24T00:00:00.000Z",
  "updated_at": "2019-11-26T00:00:00.000Z",
  "draft": false,
  "bodyContent": "注意：この記事は解説というより詰まったところメモです。\n\n# 問題\n\n[D - Digit Sum Replace](https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_d)\n\n\n# 考察\n\n本番では解けませんでした。繰り上がり操作と桁数維持操作があることまでは見えていましたがそこから何も広がりませんでした。順位表を見ると、高レートで解けてない方がいるわりに、水付近の色でも解けてる方がちらほらいたので天啓かなと思いました。案の定、天啓でした。やめてくれー。\n\n\neditorialによると、どの2桁を選んでも開かれる予選の回数は同じだそうです。\n実験をすると確かにそうなりますが、あまりピンときていません。うーん。\n\n操作は以下の2種類あります。これらが独立な操作だからでしょうか、うーん。\n\n1. 桁数が1減り、各桁の和は変わらない\n1. 桁数は変わらず、各桁の和は9減る\n\n2種類の操作があるのは確かにそうです。では、これらの操作は何回行われるのでしょうか。\n\n桁数を\\\\(D\\\\)、各桁の和を\\\\(S\\\\)とします。\n\n最後に1桁の数字になるので、\\\\(D-1\\\\)桁減ることになります。\nつまり、1.の操作は\\\\(D-1\\\\)回行われます。\n\nそれで、2.の操作ですが、\n\n> 各桁の数字の和は\\\\(1\\\\)～\\\\(9\\\\)のどれかで終わるので、パターン#2はちょうど 「\\\\(S-1\\\\)を\\\\(9\\\\)で割った商」回行われる (editorialより)\n\nうーん、全然わかりません。\\\\(S-1\\\\)はどこからきたんですか。\n\\\\(S/9\\\\)じゃないんですか。\n\n\n実験してみることにします。\n\n- \\\\(S = 37\\\\)のとき、\\\\(37 \\to 28 \\to 19 \\to 10 \\to 1 \\\\)、で\\\\(4\\\\)回\n- **\\\\(S = 36\\\\)のとき、\\\\(36 \\to 27 \\to 18 \\to 9 \\\\)、で\\\\(3\\\\)回**\n- \\\\(S = 35\\\\)のとき、\\\\(35 \\to 26 \\to 17 \\to 8 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 34\\\\)のとき、\\\\(34 \\to 25 \\to 16 \\to 7 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 33\\\\)のとき、\\\\(33 \\to 24 \\to 15 \\to 6 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 32\\\\)のとき、\\\\(32 \\to 23 \\to 14 \\to 5 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 31\\\\)のとき、\\\\(31 \\to 22 \\to 13 \\to 4 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 30\\\\)のとき、\\\\(30 \\to 21 \\to 12 \\to 3 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 29\\\\)のとき、\\\\(29 \\to 20 \\to 11 \\to 2 \\\\)、で\\\\(3\\\\)回\n- \\\\(S = 28\\\\)のとき、\\\\(28 \\to 19 \\to 10 \\to 1 \\\\)、で\\\\(3\\\\)回\n- **\\\\(S = 27\\\\)のとき、\\\\(27 \\to 18 \\to 9 \\\\)、で\\\\(2\\\\)回**\n- \\\\(S = 26\\\\)のとき、\\\\(26 \\to 17 \\to 8 \\\\)、で\\\\(2\\\\)回\n\n\\\\(S\\\\)が\\\\(9\\\\)の倍数のとき、操作回数は\\\\(S/9\\\\)より\\\\(1\\\\)回少ないことがわかりました。\n\n\\\\(S\\\\)が\\\\(9\\\\)の倍数でなければ\\\\(s/9\\\\)でよいが、\\\\(9\\\\)の倍数のときは\\\\(1\\\\)回少ないです。なので予め\\\\(1\\\\)引いておけば帳尻をあわせることができます。もしくは、\\\\(S\\\\)が\\\\(9\\\\)の倍数のときだけ全体から\\\\(1\\\\)引いても同じです。天才？\n\n\n\n\n# 感想\n各桁の和に注目しなかったので解に至らなかった。とはいえこれ苦手すぎるので、2種の操作が見えても解に至らなかったと思う。\n\nシミュレーションで通せるなら通したい。\n\n\n\n自分の苦手が前面に出た問題でした。\n- 独立操作をみつける\n- 独立なんだから他の操作に影響を与えない\n- 操作できる回数\n\nあたりを考えるのが苦手そう。",
  "bodyHtml": "<p>注意：この記事は解説というより詰まったところメモです。</p>\n<h1>問題</h1>\n<p><a href=\"https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_d\">D - Digit Sum Replace</a></p>\n<h1>考察</h1>\n<p>本番では解けませんでした。繰り上がり操作と桁数維持操作があることまでは見えていましたがそこから何も広がりませんでした。順位表を見ると、高レートで解けてない方がいるわりに、水付近の色でも解けてる方がちらほらいたので天啓かなと思いました。案の定、天啓でした。やめてくれー。</p>\n<p>editorialによると、どの2桁を選んでも開かれる予選の回数は同じだそうです。\n実験をすると確かにそうなりますが、あまりピンときていません。うーん。</p>\n<p>操作は以下の2種類あります。これらが独立な操作だからでしょうか、うーん。</p>\n<ol>\n<li>桁数が1減り、各桁の和は変わらない</li>\n<li>桁数は変わらず、各桁の和は9減る</li>\n</ol>\n<p>2種類の操作があるのは確かにそうです。では、これらの操作は何回行われるのでしょうか。</p>\n<p>桁数を\\(D\\)、各桁の和を\\(S\\)とします。</p>\n<p>最後に1桁の数字になるので、\\(D-1\\)桁減ることになります。\nつまり、1.の操作は\\(D-1\\)回行われます。</p>\n<p>それで、2.の操作ですが、</p>\n<blockquote>\n<p>各桁の数字の和は\\(1\\)～\\(9\\)のどれかで終わるので、パターン#2はちょうど 「\\(S-1\\)を\\(9\\)で割った商」回行われる (editorialより)</p>\n</blockquote>\n<p>うーん、全然わかりません。\\(S-1\\)はどこからきたんですか。\n\\(S/9\\)じゃないんですか。</p>\n<p>実験してみることにします。</p>\n<ul>\n<li>\\(S = 37\\)のとき、\\(37 \\to 28 \\to 19 \\to 10 \\to 1 \\)、で\\(4\\)回</li>\n<li><strong>\\(S = 36\\)のとき、\\(36 \\to 27 \\to 18 \\to 9 \\)、で\\(3\\)回</strong></li>\n<li>\\(S = 35\\)のとき、\\(35 \\to 26 \\to 17 \\to 8 \\)、で\\(3\\)回</li>\n<li>\\(S = 34\\)のとき、\\(34 \\to 25 \\to 16 \\to 7 \\)、で\\(3\\)回</li>\n<li>\\(S = 33\\)のとき、\\(33 \\to 24 \\to 15 \\to 6 \\)、で\\(3\\)回</li>\n<li>\\(S = 32\\)のとき、\\(32 \\to 23 \\to 14 \\to 5 \\)、で\\(3\\)回</li>\n<li>\\(S = 31\\)のとき、\\(31 \\to 22 \\to 13 \\to 4 \\)、で\\(3\\)回</li>\n<li>\\(S = 30\\)のとき、\\(30 \\to 21 \\to 12 \\to 3 \\)、で\\(3\\)回</li>\n<li>\\(S = 29\\)のとき、\\(29 \\to 20 \\to 11 \\to 2 \\)、で\\(3\\)回</li>\n<li>\\(S = 28\\)のとき、\\(28 \\to 19 \\to 10 \\to 1 \\)、で\\(3\\)回</li>\n<li><strong>\\(S = 27\\)のとき、\\(27 \\to 18 \\to 9 \\)、で\\(2\\)回</strong></li>\n<li>\\(S = 26\\)のとき、\\(26 \\to 17 \\to 8 \\)、で\\(2\\)回</li>\n</ul>\n<p>\\(S\\)が\\(9\\)の倍数のとき、操作回数は\\(S/9\\)より\\(1\\)回少ないことがわかりました。</p>\n<p>\\(S\\)が\\(9\\)の倍数でなければ\\(s/9\\)でよいが、\\(9\\)の倍数のときは\\(1\\)回少ないです。なので予め\\(1\\)引いておけば帳尻をあわせることができます。もしくは、\\(S\\)が\\(9\\)の倍数のときだけ全体から\\(1\\)引いても同じです。天才？</p>\n<h1>感想</h1>\n<p>各桁の和に注目しなかったので解に至らなかった。とはいえこれ苦手すぎるので、2種の操作が見えても解に至らなかったと思う。</p>\n<p>シミュレーションで通せるなら通したい。</p>\n<p>自分の苦手が前面に出た問題でした。</p>\n<ul>\n<li>独立操作をみつける</li>\n<li>独立なんだから他の操作に影響を与えない</li>\n<li>操作できる回数</li>\n</ul>\n<p>あたりを考えるのが苦手そう。</p>\n",
  "dir": "contents/posts",
  "base": "2019-11-24-ddcc2020_d.json",
  "ext": ".json",
  "sourceBase": "2019-11-24-ddcc2020_d.md",
  "sourceExt": ".md"
}