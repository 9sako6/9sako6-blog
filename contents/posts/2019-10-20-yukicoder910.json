{
  "title": "No.910 素数部分列 (★2.5)",
  "description": null,
  "tags": [
    "競技プログラミング",
    "yukicoder",
    "素数",
    "貪欲",
    "部分列",
    "部分列の削除"
  ],
  "created_at": "2019-10-20T00:00:00.000Z",
  "updated_at": null,
  "draft": false,
  "bodyContent": "# 問題\n\n[No.910 素数部分列](https://yukicoder.me/problems/no/910)\n\n# 解法\n文字列の構成要素で、素数は`3`, `5`, `7`。\nまずは、これらを1つずつ削除すれば良さそう。\nなぜなら、`3`, `5`, `7`を残しておくことによって今後の操作で削除回数が増えるなんてことはないから。\n（どうやって証明するのかはわからないけど、、、）\n\n次に、残っている`1`, `9`からなる文字列について考える。\nこれらを使って作れる素数は`11`, `19`がある。\nでも、実はもっとあって、`991`も素数である。`99991`も素数である。\n\nここで考えるべきなのは`11`, `19`, `991`系をどの順番で消していくかである。\n`19`, `991`系の存在から、`9`はいくつあっても素数になれないが、`1`があると素数になりうる。\nなので、`1`はなるべく`9`と一緒に消したい気持ちになる。`11`を消すのは一番最後にする。\n\n`19`, `991`系のどっちを先に消すかであるが、`19`を先に消すのが良い。\n例えば、`99191`を考えた時、先に`991`を消すと削除回数は1回だが、先に`19`を消すと2回になる。\n\nということで、`19`を消すと`9`の左側にある`1`は全部消えるから、残る文字列は`999...111...`みたいなものになる。\n\n次に`991`系を消すが、消すのは`991`だけでよい。（例えば、`99991`を考えた時、`991`を消すのも`99991`を消すのも回数は同じである。\n例えば、`999911`を考えた時、`99991`を消すと1回だが、`991`を消と2回である。つまり、`991`になって消える可能性があるのだがら、むやみに`9`を消費する必要はない。）\n\n最後に、残った`11`を削除すれば良い。\n\n\n```c++\n#include <iostream>\n\nusing namespace std;\n#define rep(i, n) for (int i = 0; i < (int)(n); i++)\n\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int ans = 0;\n  int cnt_1 = 0;\n  int cnt_9 = 0;\n  rep(i, n) {\n    if ((s[i] != '1') && (s[i] != '9')) {\n      // 3, 5, 7を消す\n      ++ans;\n    } else if (s[i] == '1') {\n      cnt_1++;\n    } else if (s[i] == '9') {\n      // 19を消す\n      cnt_9++;\n      if (cnt_1 > 0) {\n        cnt_1--;\n        cnt_9--;\n        ans++;\n      }\n    }\n  }\n  // 991を消す\n  int cnt_991 = min(cnt_9 / 2, cnt_1);\n  ans += cnt_991;\n  // 11を消す\n  ans += (cnt_1 - cnt_991) / 2;\n  cout << ans << endl;\n\n  return 0;\n}\n```\n\n[submission](https://yukicoder.me/submissions/391932)\n\n\n\n# 学び\n`991`って素数なんですね。（本番では`991`が素数だと気づくのが遅すぎた。）\n複雑な実装をして`WA`しまくったので、シンプルな実装に落ちるまで煮詰めてから実装をはじめなさーい\n\n部分列`19`を消す処理が頭いいので覚えたい。\n\n```c++\n// 19を消す\ncnt_9++;\nif (cnt_1 > 0) {\n  cnt_1--;\n  cnt_9--;\n  ans++;\n}\n```",
  "bodyHtml": "<h1>問題</h1>\n<p><a href=\"https://yukicoder.me/problems/no/910\">No.910 素数部分列</a></p>\n<h1>解法</h1>\n<p>文字列の構成要素で、素数は<code>3</code>, <code>5</code>, <code>7</code>。\nまずは、これらを1つずつ削除すれば良さそう。\nなぜなら、<code>3</code>, <code>5</code>, <code>7</code>を残しておくことによって今後の操作で削除回数が増えるなんてことはないから。\n（どうやって証明するのかはわからないけど、、、）</p>\n<p>次に、残っている<code>1</code>, <code>9</code>からなる文字列について考える。\nこれらを使って作れる素数は<code>11</code>, <code>19</code>がある。\nでも、実はもっとあって、<code>991</code>も素数である。<code>99991</code>も素数である。</p>\n<p>ここで考えるべきなのは<code>11</code>, <code>19</code>, <code>991</code>系をどの順番で消していくかである。\n<code>19</code>, <code>991</code>系の存在から、<code>9</code>はいくつあっても素数になれないが、<code>1</code>があると素数になりうる。\nなので、<code>1</code>はなるべく<code>9</code>と一緒に消したい気持ちになる。<code>11</code>を消すのは一番最後にする。</p>\n<p><code>19</code>, <code>991</code>系のどっちを先に消すかであるが、<code>19</code>を先に消すのが良い。\n例えば、<code>99191</code>を考えた時、先に<code>991</code>を消すと削除回数は1回だが、先に<code>19</code>を消すと2回になる。</p>\n<p>ということで、<code>19</code>を消すと<code>9</code>の左側にある<code>1</code>は全部消えるから、残る文字列は<code>999...111...</code>みたいなものになる。</p>\n<p>次に<code>991</code>系を消すが、消すのは<code>991</code>だけでよい。（例えば、<code>99991</code>を考えた時、<code>991</code>を消すのも<code>99991</code>を消すのも回数は同じである。\n例えば、<code>999911</code>を考えた時、<code>99991</code>を消すと1回だが、<code>991</code>を消と2回である。つまり、<code>991</code>になって消える可能性があるのだがら、むやみに<code>9</code>を消費する必要はない。）</p>\n<p>最後に、残った<code>11</code>を削除すれば良い。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> rep(i, n) for (int i = 0; i &lt; (int)(n); i++)</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-built_in\">cin</span>.tie(<span class=\"hljs-number\">0</span>);\n  ios::sync_with_stdio(<span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-keyword\">int</span> n;\n  <span class=\"hljs-built_in\">cin</span> &gt;&gt; n;\n  <span class=\"hljs-built_in\">string</span> s;\n  <span class=\"hljs-built_in\">cin</span> &gt;&gt; s;\n  <span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">int</span> cnt_1 = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">int</span> cnt_9 = <span class=\"hljs-number\">0</span>;\n  rep(i, n) {\n    <span class=\"hljs-keyword\">if</span> ((s[i] != <span class=\"hljs-string\">'1'</span>) &amp;&amp; (s[i] != <span class=\"hljs-string\">'9'</span>)) {\n      <span class=\"hljs-comment\">// 3, 5, 7を消す</span>\n      ++ans;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s[i] == <span class=\"hljs-string\">'1'</span>) {\n      cnt_1++;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s[i] == <span class=\"hljs-string\">'9'</span>) {\n      <span class=\"hljs-comment\">// 19を消す</span>\n      cnt_9++;\n      <span class=\"hljs-keyword\">if</span> (cnt_1 &gt; <span class=\"hljs-number\">0</span>) {\n        cnt_1--;\n        cnt_9--;\n        ans++;\n      }\n    }\n  }\n  <span class=\"hljs-comment\">// 991を消す</span>\n  <span class=\"hljs-keyword\">int</span> cnt_991 = min(cnt_9 / <span class=\"hljs-number\">2</span>, cnt_1);\n  ans += cnt_991;\n  <span class=\"hljs-comment\">// 11を消す</span>\n  ans += (cnt_1 - cnt_991) / <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre><p><a href=\"https://yukicoder.me/submissions/391932\">submission</a></p>\n<h1>学び</h1>\n<p><code>991</code>って素数なんですね。（本番では<code>991</code>が素数だと気づくのが遅すぎた。）\n複雑な実装をして<code>WA</code>しまくったので、シンプルな実装に落ちるまで煮詰めてから実装をはじめなさーい</p>\n<p>部分列<code>19</code>を消す処理が頭いいので覚えたい。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">// 19を消す</span>\ncnt_9++;\n<span class=\"hljs-keyword\">if</span> (cnt_1 &gt; <span class=\"hljs-number\">0</span>) {\n  cnt_1--;\n  cnt_9--;\n  ans++;\n}</code></pre>",
  "dir": "contents/posts",
  "base": "2019-10-20-yukicoder910.json",
  "ext": ".json",
  "sourceBase": "2019-10-20-yukicoder910.md",
  "sourceExt": ".md"
}