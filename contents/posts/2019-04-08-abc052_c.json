{
  "title": "ABC052 C - Factors of Factorial",
  "description": "ABC052 C N!の約数の個数を10^9+7で割った余りを答える問題。この問題を解くためには、N!がN以下の素数でそれぞれ何回割れるかがわかればよいです。...",
  "tags": [
    "競技プログラミング"
  ],
  "created_at": "2019-04-08T00:00:00.000Z",
  "bodyContent": "# 問題\n\n[C - Factors of Factorial](https://atcoder.jp/contests/abc052/tasks/arc067_a)\n\nN!の約数の個数を10^9+7で割った余りを答える問題。\n\n# 解法\n約数の個数は(各素因数の指数+1)を掛け合わせたものです。\nこの問題を解くためには、N!がN以下の素数でそれぞれ何回割れるかがわかればよいです。\n\nそのためにまず、N以下の素数を求めます。\n\n次に、N!が各素数で何回割れるかを数えていきます。\nある素数pでN!を割れる回数は、N以下の各正数について、pで何回割れるかを数え、それらの回数を合計すれば求まります。\n\n約数の個数は(各素因数の指数+1)を掛け合わせたものなので、この問題を解くことができました。\n\n```python\ndef is_prime(n):\n    if n <= 1:\n        return False\n    elif n == 2:\n        return True\n    else:\n        for i in range(2, int((n**(1/2)))+1):\n            if n % i == 0:\n                return False\n        return True\n\nfrom collections import Counter\nN = int(input())\nMOD = 10**9+7\n\nprimes = [i for i in range(N+1) if is_prime(i)] # N以下の素数\n\nc = Counter(primes) # 各素数で何回割れるかを記録する\n                    # 最後に約数の個数を求める時、\n                    # (各素因数の指数+1)を掛け合わせるので1で初期化されるCounterは都合が良い\n\n# N以下の数について、各素数で割れた回数を数えていく\nfor j in range(2, N+1):\n    for prime in primes:\n        while j % prime == 0:\n            j //= prime\n            c[prime] += 1\n\nans = 1\nfor cnt in c.values():\n    ans *= cnt # 初期値が1なので1を足す必要はない\nprint(ans%MOD) # 剰余で答えるのを忘れずに\n```",
  "bodyHtml": "<h1>問題</h1>\n<p><a href=\"https://atcoder.jp/contests/abc052/tasks/arc067_a\">C - Factors of Factorial</a></p>\n<p>N!の約数の個数を10^9+7で割った余りを答える問題。</p>\n<h1>解法</h1>\n<p>約数の個数は(各素因数の指数+1)を掛け合わせたものです。\nこの問題を解くためには、N!がN以下の素数でそれぞれ何回割れるかがわかればよいです。</p>\n<p>そのためにまず、N以下の素数を求めます。</p>\n<p>次に、N!が各素数で何回割れるかを数えていきます。\nある素数pでN!を割れる回数は、N以下の各正数について、pで何回割れるかを数え、それらの回数を合計すれば求まります。</p>\n<p>約数の個数は(各素因数の指数+1)を掛け合わせたものなので、この問題を解くことができました。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">is_prime</span><span class=\"hljs-params\">(n)</span>:</span>\n    <span class=\"hljs-keyword\">if</span> n &lt;= <span class=\"hljs-number\">1</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n    <span class=\"hljs-keyword\">elif</span> n == <span class=\"hljs-number\">2</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">2</span>, int((n**(<span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">2</span>)))+<span class=\"hljs-number\">1</span>):\n            <span class=\"hljs-keyword\">if</span> n % i == <span class=\"hljs-number\">0</span>:\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n\n<span class=\"hljs-keyword\">from</span> collections <span class=\"hljs-keyword\">import</span> Counter\nN = int(input())\nMOD = <span class=\"hljs-number\">10</span>**<span class=\"hljs-number\">9</span>+<span class=\"hljs-number\">7</span>\n\nprimes = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(N+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">if</span> is_prime(i)] <span class=\"hljs-comment\"># N以下の素数</span>\n\nc = Counter(primes) <span class=\"hljs-comment\"># 各素数で何回割れるかを記録する</span>\n                    <span class=\"hljs-comment\"># 最後に約数の個数を求める時、</span>\n                    <span class=\"hljs-comment\"># (各素因数の指数+1)を掛け合わせるので1で初期化されるCounterは都合が良い</span>\n\n<span class=\"hljs-comment\"># N以下の数について、各素数で割れた回数を数えていく</span>\n<span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">2</span>, N+<span class=\"hljs-number\">1</span>):\n    <span class=\"hljs-keyword\">for</span> prime <span class=\"hljs-keyword\">in</span> primes:\n        <span class=\"hljs-keyword\">while</span> j % prime == <span class=\"hljs-number\">0</span>:\n            j //= prime\n            c[prime] += <span class=\"hljs-number\">1</span>\n\nans = <span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">for</span> cnt <span class=\"hljs-keyword\">in</span> c.values():\n    ans *= cnt <span class=\"hljs-comment\"># 初期値が1なので1を足す必要はない</span>\nprint(ans%MOD) <span class=\"hljs-comment\"># 剰余で答えるのを忘れずに</span></code></pre>",
  "dir": "contents/posts",
  "base": "2019-04-08-abc052_c.json",
  "ext": ".json",
  "sourceBase": "2019-04-08-abc052_c.md",
  "sourceExt": ".md"
}