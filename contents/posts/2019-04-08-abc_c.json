{
  "title": "AtCoder Beginner Contest C をPython3で解く",
  "description": "ABC C問題をひたすら解いて、生やした考察やミスりポイント、Tipsを記録していく記事...",
  "tags": [
    "競技プログラミング",
    "Python3"
  ],
  "created_at": "2019-04-08T00:00:00.000Z",
  "updated_at": "2019-04-29T00:00:00.000Z",
  "draft": true,
  "bodyContent": "ABC C問題をひたすら解いて、生やした考察やミスりポイント、Tipsを記録していく記事。\nくさころが文章を書く練習をする記事でもある。\n\n# ABC040 C - 柱柱柱柱柱\n\n[C - 柱柱柱柱柱](https://atcoder.jp/contests/abc040/tasks/abc040_c)\n\n\\\\(N\\\\)本の柱が並んでいる。\n\\\\(1\\\\)本目の柱からスタートし、右へ柱を渡っていき\\\\(N\\\\)本目の柱まで行きたい。\n移動するときには、現在いる柱の高さと、移動後の柱の高さの差の絶対値ぶんのコストがかかる。\n\\\\(N\\\\)本目の柱まで行く最小のコストを求める。\n\n## 解法\nDP（動的計画法）で解く。けんちょんさんのDP入門記事「[動的計画法超入門！ Educational DP Contest の A ～ E 問題の解説と類題集 - Qiita](https://qiita.com/drken/items/dc53c683d6de8aeacf5a#%E5%88%A5%E8%A7%A3-1-%E9%85%8D%E3%82%8B-dp)」によると、「貰うDP」、「配るDP」というのがある。この問題に当てはめると、それぞれ以下のことを意味する。\n\n- 貰うDP：\\\\(i-2\\\\), \\\\(i-1\\\\)から\\\\(i\\\\)への遷移を考える\n- 配るDP：\\\\(i\\\\)から\\\\(i+1\\\\), \\\\(i+2\\\\)の遷移を考える\n\nこの2つの方法で解いてみる。\n\n### 解法1：貰うDP\n要素を\\\\(INF\\\\)で初期化した\\\\(dp[]\\\\)を用意する。ただし、0-indexedとする。\nこれに伴い、問題では「\\\\(1\\\\)本目, \\\\(2\\\\)本目, ..., \\\\\\(N\\\\)本目」と数えていた柱を、\n「\\\\(0\\\\)本目, \\\\(1\\\\)本目, ..., \\\\\\(N-1\\\\)本目」と数えることにする。\n\\\\(dp[i]\\\\)は「\\\\(0\\\\)本目の柱から\\\\(i\\\\)本目の柱へ移動するまでの合計コストの最小値」となるようにする。\nこの\\\\(dp[i]\\\\)を求めていく。明らかに\\\\(dp[0]=0\\\\)である。\\\\(0\\\\)本目の柱から\\\\(0\\\\)本目の柱に移動するコストは\\\\(0\\\\)だからである。\nまた、柱\\\\(i\\\\)の高さを\\\\(a_i\\\\)とすると、\\\\(dp[1]=abs(a_0 - a_1)\\\\)である。\n\n\\\\(i \\geq 2\\\\)の場合を求めていく。\nこのDPにおける重要な考え方は「\\\\(i\\\\)本目の柱に到達した時点で\\\\(i-2\\\\), \\\\(i-1\\\\)本目までの合計最小コストはわかっている」というもの。\nつまり、\\\\(i-2\\\\)本目までの合計最小コストは\\\\(dp[i-2]\\\\)に、\n\\\\(i-1\\\\)本目までの合計最小コストは\\\\(dp[i-1]\\\\)に入っているんだという意識が大事。\nこれを踏まえて\n- \\\\(i-1\\\\)から\\\\(i\\\\)に移動するとき、合計最小コスト\\\\(cost1 = dp[i-1]+|a_i - a_{i-1}|\\\\)\n- \\\\(i-2\\\\)から\\\\(i\\\\)に移動するとき、合計最小コスト\\\\(cost2 = dp[i-2]+|a_i - a_{i-2}|\\\\)\n\n\\\\(dp[i]\\\\)は上記のうち小さいほうを採用すればよく、\\\\(dp[i]=min(cost1, cost2)\\\\)となる。\nこのようにして各柱についてのコストが求まり、\\\\(dp[N-1]\\\\)が答えとなる。\n\n[submission](https://atcoder.jp/contests/abc040/submissions/5101300)\n\n### 解法2：配るDP\n\n```python\nINF = 1<<60\nn=int(input())\nh=list(map(int, input().split()))+[INF]*2 # 範囲外にアクセスしないように2個足してる\ndp=[INF]*(n+2) # 範囲外にアクセスしないように2個足してる\ndp[0]=0\ndp[1]=abs(h[0]-h[1])\nfor i in range(0, n):\n    dp[i+1] = min(dp[i+1], dp[i]+abs(h[i]-h[i+1]))\n    dp[i+2] = min(dp[i+2], dp[i]+abs(h[i]-h[i+2]))\nprint(dp[n-1])\n```\n\n[submission](https://atcoder.jp/contests/abc040/submissions/5186185)\n\n## 学び\n基本的なDPなので押さえておきたい。また、最小化問題なので\\\\(INF\\\\)で初期化することに注意。\n\n\n\n# ABC042 C - こだわり者いろはちゃん / Iroha's Obsession\n\n[C - こだわり者いろはちゃん / Iroha's Obsession](https://atcoder.jp/contests/abc042/tasks/arc058_a)\n\nいろはちゃんが嫌いな数字を使わずにN円以上の最少額を支払う問題。\n\n## 解法\n2019-04-23\n\n### 解法1\n最初に生やした怪しい解法はこれ。\n\nまず、使える数字リスト`use`を作る。\nNを上の桁から見ていって、`use`の中に今見てる数字以上の数字があれば、その中で一番小さいものを選んでその桁にセットする。`use`の中に今見てる数字以上の数字がなければ、`use`の中で一番小さい数字をセットする。\n最後に、作った数字がN以上か判定する。N以上ならそのまま出力。\nNより小さかったら、一番上の桁に`use`の中で最小の数字（0以外）をセットして出力。\n\n結果、WA。\n\n```txt\n899 2\n0 8\n```\n\nみたいなケースで999を出力してしまうから。（正解は911）\nなので突貫工事的に、Nと答え候補の数の最上位桁の数字を比べて、Nの最上位桁の数字の方が小さかったら、答え候補の数の最上位桁に`use`最小の数字をくっつけて出力する処理をつけてAC。\n\n## 解法2\n\\\\(N, N+1, N+2...\\\\)とみていって、条件を満たす数だったらそれを出力する。\\\\(10N\\\\)まで調べれば答えが見つかる。（8しか使えない状況で\\\\(N=9\\\\)だった場合の\\\\(10N=90>88\\\\)、とか9しか使えない状況で\\\\(N=10\\\\)だった場合の\\\\(10N=100>99\\\\)とか）\n条件を満たすかどうかの判定は\\\\(O(logN)\\\\)らしいがよくわかってない。\n\n[submission](https://atcoder.jp/contests/abc042/submissions/5098734)\n\n## 学び\nうまく言語化できないけど自分は具体例を基準に考えすぎていて、一般的でなさそうな解き方に固執する傾向にある気がする。\nあとはif文を多用するのは危険そうなのでうまく探索できないか考える。`set()`を活用する。\n\n# ABC044 C - 高橋君とカード / Tak and Cards\n\n[C - 高橋君とカード / Tak and Cards](https://atcoder.jp/contests/abc044/tasks/arc060_a)\n\n## 解法\n2019-04-23\n\nわからん\n\n$$ ans=\\sum_{k=1}^{N}dp[N][k][kA] $$\n\n## 学び\n\n# ABC052 C - Factors of Factorial\n\n[C - Factors of Factorial](https://atcoder.jp/contests/abc052/tasks/arc067_a)\n\n\\\\(N!\\\\)の約数の個数を\\\\(10^9+7\\\\)で割った余りを答える問題。\n\n## 解法\n$$ 約数の個数=\\prod(各素因数の指数+1) $$\nである。\nこの問題を解くためには、\\\\(N!\\\\)が\\\\(N\\\\)以下の素数でそれぞれ何回割れるかがわかればよい。\nそのためにまず、\\\\(N\\\\)以下の素数を求める。\n次に、\\\\(N!\\\\)が各素数で何回割れるかを数えていく。\nある素数\\\\(p\\\\)で\\\\(N!\\\\)を割れる回数は、\\\\(N\\\\)以下の各正数について、\\\\(p\\\\)で何回割れるかを数え、それらの回数を合計すれば求まる。\n約数の個数は\\\\(\\prod(各素因数の指数+1)\\\\)なので、それを答えれば良い。\n\n```python\ndef is_prime(n):\n    if n == 2:\n        return True\n    else:\n        for i in range(2, int((n**(1/2)))+1):\n            if n % i == 0:\n                return False\n        return n > 1\n \nfrom collections import Counter\nN = int(input())\nMOD = 10**9+7\n \nprimes = [i for i in range(N+1) if is_prime(i)] # N以下の素数\n \nc = Counter(primes) # 各素数で何回割れるかを記録する\n                    # 最後に約数の個数を求める時、\n                    # (各素因数の指数+1)を掛け合わせるので1で初期化されるCounterは都合が良い\n \n# N以下の数について、各素数で割れた回数を数えていく\nfor j in range(2, N+1):\n    for prime in primes:\n        while j % prime == 0:\n            j //= prime\n            c[prime] += 1\n \nans = 1\nfor cnt in c.values():\n    ans *= cnt # 初期値が1なので1を足す必要はない\nprint(ans%MOD) # 剰余で答えるのを忘れずに\n```\n\n## 学び\n約数の個数は(各素因数の指数+1)を掛け合わせたもの。素数判定関数の実装。\n\n\n# ABC056 C - Go Home\n\n[C - Go Home](https://atcoder.jp/contests/abc056/tasks/arc070_a)\n\n200点問題。\n\n## 解法\n2019-04-23\n\n$$ 1 + 2 + ... + i \\geq X $$\n\nになる最小の\\\\(i\\\\)を求めればいい。なぜなら、上の条件を満たす集合\\\\(\\\\{1, 2, ..., i\\\\}\\\\)の部分集合でちょうど和が\\\\(X\\\\)になるものが作れるから。\n\n```python\nx = int(input())\nans, cnt, i = 0, 0, 0\n# cnt = 1 + 2 + ... + iとし、\n# cnt ≥ x になるまでの時刻ansを数えていく\nwhile cnt < x:\n    i+=1\n    cnt += i\n    ans += 1\nprint(ans)\n```\n\n## 学び\n- 最初は左に飛ぶ、飛ばない、右に飛ぶの3パターンでdfsしようとしたけどTLEになるので、200点という配点をヒントになんとかひねり出した\n- わりと苦手な部類の問題\n\n# ABC058 C - 怪文書 / Dubious Document\n\n[C - 怪文書 / Dubious Document](https://atcoder.jp/contests/abc058/tasks/arc071_a)\n\n## 解法\na~zの文字について、ある文字●が全文字列中で共通して何回使われているかを数えます。その共通して使われている数だけ文字●を連結していく、ということを行えば答えるべき文字列が求まります。\n ざっくりと\\\\(O(26n^2)=O(n^2)\\\\)ですが、\\\\(1 \\leq n \\leq 50\\\\)なので間に合います。\n\n\nまず、a~zの文字についてループを回します。\n現在見ている文字●が、文字列S_iにそれぞれいくつずつ含まれるかを数え、配列`memo`で記録しておきます。\n文字●が全文字列中で共通して使われた回数は`min(memo)`なので、答えとなる文字列に`min(memo)`文字分の文字●を足します。\n\n\n最後に、\n> 最長のものが複数ある場合は、辞書順で最小のものを求めてください。\n\nという条件に注意です。今回はa~zの順で文字を結合していったので、勝手に辞書順で最小の文字列となっています。\n\n```python\nn = int(input())\nS=[input() for _ in range(n)]\nans = ''\nfor i in range(97, 97+26):\n    memo = [0]*n # 各文字列S_iに文字chr(i)がいくつずつ含まれるかを記録する配列\n    for j in range(n):\n        memo[j] = S[j].count(chr(i))\n    ans += min(memo)*chr(i)\n\nprint(ans)\n```\n\n## 学び\n- `a`から`z`の列挙\n  ```python\n  for i in range(97, 97+26):\n      print(chr(i))\n  ```\n\n# ABC059 C - Sequence\n[C - Sequence](https://atcoder.jp/contests/abc059/tasks/arc072_a)\n\n## 解法\n（考えたこと）\n- 正の数と負の数が交互に並ぶっぽい\n  - 例えば正の数が連続して\\\\(1, 2\\\\)と並んでいた時、どうやっても「\\\\(i\\\\)項までの和と\\\\(i+1\\\\)項までの和の符号が異なる」という条件を満たせない\n  - でもしっくりこない。正しいのか証明できない。\n- 最初が正の数になるパターン、最初が負の数になるパターンを考えて手数が少ない方を選べば良さそう\n  - \\\\(2\\\\)項は最初の項より絶対値が大きければよさそう。x\n- 最初の項の絶対値はどうやって決めたらいいんだ？\n\n# ABC060 C - Sentou\n[C - Sentou](https://atcoder.jp/contests/arc073/tasks/arc073_a)\n\nスイッチを押すと\\\\(T\\\\)秒間お湯が出るシャワー。\n\n## 解法\n考えるべきパターンは2つ。\n1. お湯が出終わってからスイッチを押す\n2. お湯が出ている状態でスイッチを押す\nこれらは下図の\\\\(x\\\\)が0以上かそうでないかで場合分けできる。\n\n![abc060C](/posts_images/2019-04-08-abc_c/abc060c.png)\n\n1. お湯が出終わってからスイッチを押す（\\\\(x \\geq 0\\\\)のとき）\n    - \\\\(T\\\\)秒増える\n2. お湯が出ている状態でスイッチを押す（\\\\(x<0\\\\)のとき）\n    - \\\\(T+x\\\\)秒増える\n\n各時刻についてみていき、パターンに応じて秒数を合計していけば答えが求まる。\n\n\n# ABC099 C - Strange Bank\n[C - Strange Bank](https://atcoder.jp/contests/abc099/tasks/abc099_c)\n\n## 学び\n- べき乗を考えるだけで例えばべき乗ではない\\\\(6\\\\)の倍数\\\\(12\\\\)円とかが埋まるのが直感的にわからない\n\n\n# ABC100 C - Linear Approximation\n[C - Linear Approximation](https://atcoder.jp/contests/arc100/tasks/arc100_a)\n## 解法\n[submission](https://atcoder.jp/contests/abc102/submissions/5209404)\n\n## 学び\n\\\\(A_i-i\\\\)を点として数直線上にプロットしてみるという発想が必要だった。\nその発想は\\\\(|A_i-i - b|\\\\)が\\\\(b\\\\)からの距離だという視点から生まれる。\n絶対値を見たら数直線上の距離に当てはめられないか検討するべきか。\nあとは中央値の求め方を学べる。\n\n# ABC106 C - To Infinity\n[C - To Infinity](https://atcoder.jp/contests/abc106/tasks/abc106_c)\n\n## 解法\n\n## 学び\n- 数の大きさで怖気付いてはいけない\n  - 試すべきだったのは、入力の値と5000兆日後の文字数の比較\n\n# ABC125 C - GCD on Blackboard\n\n## 学び\ngcdはどの順序で計算しても変わらない。\n0と9のgcdは9。\n\n# 問題ステータス\n各問題で使用した手法や考え方のメモと、くさころの個人的な解答状況。\nStatusは「o: 完全に理解した」、「r: 解いたけど要復習」、「x: まったくわからない」を意味する。\n\n|Contest Name|Comment|Status|\n|:----:|----|:----:|\n|ABC001|||\n|ABC002|||\n|ABC003|||\n|ABC004|||\n|ABC005|||\n|ABC006|||\n|ABC007|||\n|ABC008|||\n|ABC009|||\n|ABC010|||\n|ABC011|||\n|ABC012|||\n|ABC013|||\n|ABC014|||\n|ABC015|||\n|ABC016|||\n|ABC017|||\n|ABC018|||\n|ABC019|||\n|ABC020|||\n|ABC021|||\n|ABC022|||\n|ABC023|||\n|ABC024|||\n|ABC025|||\n|ABC026|||\n|ABC027|||\n|ABC028|||\n|ABC029|||\n|ABC030|||\n|ABC031|||\n|ABC032|||\n|ABC033|||\n|ABC034|||\n|ABC035|||\n|ABC036|||\n|ABC037|||\n|ABC038|||\n|ABC039|||\n|ABC040|`DP`|r|\n|ABC041||o|\n|ABC042||r|\n|ABC043||o|\n|ABC044|`DP`|r|\n|ABC045||o|\n|ABC046||r|\n|ABC047|境界の処理本当に気をつけて|o|\n|ABC048|境界の処理本当に気をつけて|o|\n|ABC049||r|\n|ABC050|`Counter`の練習。問題文よく読まず10**9+7の剰余にしてなくて1回WA|r|\n|ABC051||r|\n|ABC052|10**9+7の剰余を答えるの忘れがち|r|\n|ABC053|コーナーケースに気づかず数回WA|r|\n|ABC054|無向グラフの作り方。`DFS`, `itertools`, `permutations`, `set()`|r|\n|ABC055|わずかだが根本的な条件のミスによりWA|r|\n|ABC056|カンガルー|r|\n|ABC057|丁寧にやれば解ける。が、極端なケースでミスって1WA|r|\n|ABC058|a to zの列挙|o|\n|ABC059|`必要な操作回数の最小値`|x|\n|ABC060||o|\n|ABC061|発想が足りなすぎた|r|\n|ABC062|||\n|ABC063|||\n|ABC064|||\n|ABC065|||\n|ABC066|||\n|ABC067|||\n|ABC068|||\n|ABC069|||\n|ABC070|||\n|ABC071|||\n|ABC072|||\n|ABC073|||\n|ABC074|||\n|ABC075|`DFS`, `BFS`, `Union-Find`, `ワーシャルフロイド`。嘘DFSしてた。|r|\n|ABC076|||\n|ABC077|||\n|ABC078||r|\n|ABC079||o|\n|ABC080|||\n|ABC081||o|\n|ABC082|||\n|ABC083|||\n|ABC084|||\n|ABC085|||\n|ABC086|||\n|ABC087|||\n|ABC088|||\n|ABC089|||\n|ABC090|||\n|ABC091|||\n|ABC092|||\n|ABC093||r|\n|ABC094|||\n|ABC095|||\n|ABC096|||\n|ABC097|||\n|ABC098|||\n|ABC099|`DP`|r|\n|ABC100|`中央値`|r|\n|ABC101|||\n|ABC102|||\n|ABC103|mod最大化|r|\n|ABC104|貪欲？|r|\n|ABC105|-2進数|r|\n|ABC106|5000兆日|r|\n|ABC107||r|\n|ABC108|Kの倍数となる整数の組|o|\n|ABC109||r|\n|ABC110||r|\n|ABC111||x|\n|ABC112||r|\n|ABC113||r|\n|ABC114||r|\n|ABC115||r|\n|ABC116||r|\n|ABC117||x|\n|ABC118||r|\n|ABC119||x|\n|ABC120||r|\n|ABC121||x|\n|ABC122|`累積和`|r|\n|ABC123||r|\n|ABC124||r|\n|ABC125|`累積gcd`, gcdの結合則|x|",
  "bodyHtml": "<p>ABC C問題をひたすら解いて、生やした考察やミスりポイント、Tipsを記録していく記事。\nくさころが文章を書く練習をする記事でもある。</p>\n<h1>ABC040 C - 柱柱柱柱柱</h1>\n<p><a href=\"https://atcoder.jp/contests/abc040/tasks/abc040_c\">C - 柱柱柱柱柱</a></p>\n<p>\\(N\\)本の柱が並んでいる。\n\\(1\\)本目の柱からスタートし、右へ柱を渡っていき\\(N\\)本目の柱まで行きたい。\n移動するときには、現在いる柱の高さと、移動後の柱の高さの差の絶対値ぶんのコストがかかる。\n\\(N\\)本目の柱まで行く最小のコストを求める。</p>\n<h2>解法</h2>\n<p>DP（動的計画法）で解く。けんちょんさんのDP入門記事「<a href=\"https://qiita.com/drken/items/dc53c683d6de8aeacf5a#%E5%88%A5%E8%A7%A3-1-%E9%85%8D%E3%82%8B-dp\">動的計画法超入門！ Educational DP Contest の A ～ E 問題の解説と類題集 - Qiita</a>」によると、「貰うDP」、「配るDP」というのがある。この問題に当てはめると、それぞれ以下のことを意味する。</p>\n<ul>\n<li>貰うDP：\\(i-2\\), \\(i-1\\)から\\(i\\)への遷移を考える</li>\n<li>配るDP：\\(i\\)から\\(i+1\\), \\(i+2\\)の遷移を考える</li>\n</ul>\n<p>この2つの方法で解いてみる。</p>\n<h3>解法1：貰うDP</h3>\n<p>要素を\\(INF\\)で初期化した\\(dp[]\\)を用意する。ただし、0-indexedとする。\nこれに伴い、問題では「\\(1\\)本目, \\(2\\)本目, ..., \\(N\\)本目」と数えていた柱を、\n「\\(0\\)本目, \\(1\\)本目, ..., \\(N-1\\)本目」と数えることにする。\n\\(dp[i]\\)は「\\(0\\)本目の柱から\\(i\\)本目の柱へ移動するまでの合計コストの最小値」となるようにする。\nこの\\(dp[i]\\)を求めていく。明らかに\\(dp[0]=0\\)である。\\(0\\)本目の柱から\\(0\\)本目の柱に移動するコストは\\(0\\)だからである。\nまた、柱\\(i\\)の高さを\\(a_i\\)とすると、\\(dp[1]=abs(a_0 - a_1)\\)である。</p>\n<p>\\(i \\geq 2\\)の場合を求めていく。\nこのDPにおける重要な考え方は「\\(i\\)本目の柱に到達した時点で\\(i-2\\), \\(i-1\\)本目までの合計最小コストはわかっている」というもの。\nつまり、\\(i-2\\)本目までの合計最小コストは\\(dp[i-2]\\)に、\n\\(i-1\\)本目までの合計最小コストは\\(dp[i-1]\\)に入っているんだという意識が大事。\nこれを踏まえて</p>\n<ul>\n<li>\\(i-1\\)から\\(i\\)に移動するとき、合計最小コスト\\(cost1 = dp[i-1]+|a_i - a_{i-1}|\\)</li>\n<li>\\(i-2\\)から\\(i\\)に移動するとき、合計最小コスト\\(cost2 = dp[i-2]+|a_i - a_{i-2}|\\)</li>\n</ul>\n<p>\\(dp[i]\\)は上記のうち小さいほうを採用すればよく、\\(dp[i]=min(cost1, cost2)\\)となる。\nこのようにして各柱についてのコストが求まり、\\(dp[N-1]\\)が答えとなる。</p>\n<p><a href=\"https://atcoder.jp/contests/abc040/submissions/5101300\">submission</a></p>\n<h3>解法2：配るDP</h3>\n<pre><code class=\"hljs\">INF = <span class=\"hljs-number\">1</span>&lt;&lt;<span class=\"hljs-number\">60</span>\nn=int(input())\nh=list(map(int, input().split()))+[INF]*<span class=\"hljs-number\">2</span> <span class=\"hljs-comment\"># 範囲外にアクセスしないように2個足してる</span>\ndp=[INF]*(n+<span class=\"hljs-number\">2</span>) <span class=\"hljs-comment\"># 範囲外にアクセスしないように2個足してる</span>\ndp[<span class=\"hljs-number\">0</span>]=<span class=\"hljs-number\">0</span>\ndp[<span class=\"hljs-number\">1</span>]=abs(h[<span class=\"hljs-number\">0</span>]-h[<span class=\"hljs-number\">1</span>])\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">0</span>, n):\n    dp[i+<span class=\"hljs-number\">1</span>] = min(dp[i+<span class=\"hljs-number\">1</span>], dp[i]+abs(h[i]-h[i+<span class=\"hljs-number\">1</span>]))\n    dp[i+<span class=\"hljs-number\">2</span>] = min(dp[i+<span class=\"hljs-number\">2</span>], dp[i]+abs(h[i]-h[i+<span class=\"hljs-number\">2</span>]))\nprint(dp[n<span class=\"hljs-number\">-1</span>])</code></pre><p><a href=\"https://atcoder.jp/contests/abc040/submissions/5186185\">submission</a></p>\n<h2>学び</h2>\n<p>基本的なDPなので押さえておきたい。また、最小化問題なので\\(INF\\)で初期化することに注意。</p>\n<h1>ABC042 C - こだわり者いろはちゃん / Iroha's Obsession</h1>\n<p><a href=\"https://atcoder.jp/contests/abc042/tasks/arc058_a\">C - こだわり者いろはちゃん / Iroha's Obsession</a></p>\n<p>いろはちゃんが嫌いな数字を使わずにN円以上の最少額を支払う問題。</p>\n<h2>解法</h2>\n<p>2019-04-23</p>\n<h3>解法1</h3>\n<p>最初に生やした怪しい解法はこれ。</p>\n<p>まず、使える数字リスト<code>use</code>を作る。\nNを上の桁から見ていって、<code>use</code>の中に今見てる数字以上の数字があれば、その中で一番小さいものを選んでその桁にセットする。<code>use</code>の中に今見てる数字以上の数字がなければ、<code>use</code>の中で一番小さい数字をセットする。\n最後に、作った数字がN以上か判定する。N以上ならそのまま出力。\nNより小さかったら、一番上の桁に<code>use</code>の中で最小の数字（0以外）をセットして出力。</p>\n<p>結果、WA。</p>\n<pre><code class=\"hljs\">899 2\n0 8</code></pre><p>みたいなケースで999を出力してしまうから。（正解は911）\nなので突貫工事的に、Nと答え候補の数の最上位桁の数字を比べて、Nの最上位桁の数字の方が小さかったら、答え候補の数の最上位桁に<code>use</code>最小の数字をくっつけて出力する処理をつけてAC。</p>\n<h2>解法2</h2>\n<p>\\(N, N+1, N+2...\\)とみていって、条件を満たす数だったらそれを出力する。\\(10N\\)まで調べれば答えが見つかる。（8しか使えない状況で\\(N=9\\)だった場合の\\(10N=90&gt;88\\)、とか9しか使えない状況で\\(N=10\\)だった場合の\\(10N=100&gt;99\\)とか）\n条件を満たすかどうかの判定は\\(O(logN)\\)らしいがよくわかってない。</p>\n<p><a href=\"https://atcoder.jp/contests/abc042/submissions/5098734\">submission</a></p>\n<h2>学び</h2>\n<p>うまく言語化できないけど自分は具体例を基準に考えすぎていて、一般的でなさそうな解き方に固執する傾向にある気がする。\nあとはif文を多用するのは危険そうなのでうまく探索できないか考える。<code>set()</code>を活用する。</p>\n<h1>ABC044 C - 高橋君とカード / Tak and Cards</h1>\n<p><a href=\"https://atcoder.jp/contests/abc044/tasks/arc060_a\">C - 高橋君とカード / Tak and Cards</a></p>\n<h2>解法</h2>\n<p>2019-04-23</p>\n<p>わからん</p>\n<p>$$ ans=\\sum_{k=1}^{N}dp[N][k][kA] $$</p>\n<h2>学び</h2>\n<h1>ABC052 C - Factors of Factorial</h1>\n<p><a href=\"https://atcoder.jp/contests/abc052/tasks/arc067_a\">C - Factors of Factorial</a></p>\n<p>\\(N!\\)の約数の個数を\\(10^9+7\\)で割った余りを答える問題。</p>\n<h2>解法</h2>\n<p>$$ 約数の個数=\\prod(各素因数の指数+1) $$\nである。\nこの問題を解くためには、\\(N!\\)が\\(N\\)以下の素数でそれぞれ何回割れるかがわかればよい。\nそのためにまず、\\(N\\)以下の素数を求める。\n次に、\\(N!\\)が各素数で何回割れるかを数えていく。\nある素数\\(p\\)で\\(N!\\)を割れる回数は、\\(N\\)以下の各正数について、\\(p\\)で何回割れるかを数え、それらの回数を合計すれば求まる。\n約数の個数は\\(\\prod(各素因数の指数+1)\\)なので、それを答えれば良い。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">is_prime</span><span class=\"hljs-params\">(n)</span>:</span>\n    <span class=\"hljs-keyword\">if</span> n == <span class=\"hljs-number\">2</span>:\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">2</span>, int((n**(<span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">2</span>)))+<span class=\"hljs-number\">1</span>):\n            <span class=\"hljs-keyword\">if</span> n % i == <span class=\"hljs-number\">0</span>:\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\n        <span class=\"hljs-keyword\">return</span> n &gt; <span class=\"hljs-number\">1</span>\n \n<span class=\"hljs-keyword\">from</span> collections <span class=\"hljs-keyword\">import</span> Counter\nN = int(input())\nMOD = <span class=\"hljs-number\">10</span>**<span class=\"hljs-number\">9</span>+<span class=\"hljs-number\">7</span>\n \nprimes = [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(N+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">if</span> is_prime(i)] <span class=\"hljs-comment\"># N以下の素数</span>\n \nc = Counter(primes) <span class=\"hljs-comment\"># 各素数で何回割れるかを記録する</span>\n                    <span class=\"hljs-comment\"># 最後に約数の個数を求める時、</span>\n                    <span class=\"hljs-comment\"># (各素因数の指数+1)を掛け合わせるので1で初期化されるCounterは都合が良い</span>\n \n<span class=\"hljs-comment\"># N以下の数について、各素数で割れた回数を数えていく</span>\n<span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">2</span>, N+<span class=\"hljs-number\">1</span>):\n    <span class=\"hljs-keyword\">for</span> prime <span class=\"hljs-keyword\">in</span> primes:\n        <span class=\"hljs-keyword\">while</span> j % prime == <span class=\"hljs-number\">0</span>:\n            j //= prime\n            c[prime] += <span class=\"hljs-number\">1</span>\n \nans = <span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">for</span> cnt <span class=\"hljs-keyword\">in</span> c.values():\n    ans *= cnt <span class=\"hljs-comment\"># 初期値が1なので1を足す必要はない</span>\nprint(ans%MOD) <span class=\"hljs-comment\"># 剰余で答えるのを忘れずに</span></code></pre><h2>学び</h2>\n<p>約数の個数は(各素因数の指数+1)を掛け合わせたもの。素数判定関数の実装。</p>\n<h1>ABC056 C - Go Home</h1>\n<p><a href=\"https://atcoder.jp/contests/abc056/tasks/arc070_a\">C - Go Home</a></p>\n<p>200点問題。</p>\n<h2>解法</h2>\n<p>2019-04-23</p>\n<p>$$ 1 + 2 + ... + i \\geq X $$</p>\n<p>になる最小の\\(i\\)を求めればいい。なぜなら、上の条件を満たす集合\\(\\{1, 2, ..., i\\}\\)の部分集合でちょうど和が\\(X\\)になるものが作れるから。</p>\n<pre><code class=\"hljs\">x = int(input())\nans, cnt, i = <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>\n<span class=\"hljs-comment\"># cnt = 1 + 2 + ... + iとし、</span>\n<span class=\"hljs-comment\"># cnt ≥ x になるまでの時刻ansを数えていく</span>\n<span class=\"hljs-keyword\">while</span> cnt &lt; x:\n    i+=<span class=\"hljs-number\">1</span>\n    cnt += i\n    ans += <span class=\"hljs-number\">1</span>\nprint(ans)</code></pre><h2>学び</h2>\n<ul>\n<li>最初は左に飛ぶ、飛ばない、右に飛ぶの3パターンでdfsしようとしたけどTLEになるので、200点という配点をヒントになんとかひねり出した</li>\n<li>わりと苦手な部類の問題</li>\n</ul>\n<h1>ABC058 C - 怪文書 / Dubious Document</h1>\n<p><a href=\"https://atcoder.jp/contests/abc058/tasks/arc071_a\">C - 怪文書 / Dubious Document</a></p>\n<h2>解法</h2>\n<p>a~zの文字について、ある文字●が全文字列中で共通して何回使われているかを数えます。その共通して使われている数だけ文字●を連結していく、ということを行えば答えるべき文字列が求まります。\nざっくりと\\(O(26n^2)=O(n^2)\\)ですが、\\(1 \\leq n \\leq 50\\)なので間に合います。</p>\n<p>まず、a~zの文字についてループを回します。\n現在見ている文字●が、文字列S_iにそれぞれいくつずつ含まれるかを数え、配列<code>memo</code>で記録しておきます。\n文字●が全文字列中で共通して使われた回数は<code>min(memo)</code>なので、答えとなる文字列に<code>min(memo)</code>文字分の文字●を足します。</p>\n<p>最後に、</p>\n<blockquote>\n<p>最長のものが複数ある場合は、辞書順で最小のものを求めてください。</p>\n</blockquote>\n<p>という条件に注意です。今回はa~zの順で文字を結合していったので、勝手に辞書順で最小の文字列となっています。</p>\n<pre><code class=\"hljs\">n = int(input())\nS=[input() <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> range(n)]\nans = <span class=\"hljs-string\">''</span>\n<span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">97</span>, <span class=\"hljs-number\">97</span>+<span class=\"hljs-number\">26</span>):\n    memo = [<span class=\"hljs-number\">0</span>]*n <span class=\"hljs-comment\"># 各文字列S_iに文字chr(i)がいくつずつ含まれるかを記録する配列</span>\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> range(n):\n        memo[j] = S[j].count(chr(i))\n    ans += min(memo)*chr(i)\n\nprint(ans)</code></pre><h2>学び</h2>\n<ul>\n<li><code>a</code>から<code>z</code>の列挙<pre><code class=\"hljs\"><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(<span class=\"hljs-number\">97</span>, <span class=\"hljs-number\">97</span>+<span class=\"hljs-number\">26</span>):\n    print(chr(i))</code></pre></li>\n</ul>\n<h1>ABC059 C - Sequence</h1>\n<p><a href=\"https://atcoder.jp/contests/abc059/tasks/arc072_a\">C - Sequence</a></p>\n<h2>解法</h2>\n<p>（考えたこと）</p>\n<ul>\n<li>正の数と負の数が交互に並ぶっぽい\n<ul>\n<li>例えば正の数が連続して\\(1, 2\\)と並んでいた時、どうやっても「\\(i\\)項までの和と\\(i+1\\)項までの和の符号が異なる」という条件を満たせない</li>\n<li>でもしっくりこない。正しいのか証明できない。</li>\n</ul>\n</li>\n<li>最初が正の数になるパターン、最初が負の数になるパターンを考えて手数が少ない方を選べば良さそう\n<ul>\n<li>\\(2\\)項は最初の項より絶対値が大きければよさそう。x</li>\n</ul>\n</li>\n<li>最初の項の絶対値はどうやって決めたらいいんだ？</li>\n</ul>\n<h1>ABC060 C - Sentou</h1>\n<p><a href=\"https://atcoder.jp/contests/arc073/tasks/arc073_a\">C - Sentou</a></p>\n<p>スイッチを押すと\\(T\\)秒間お湯が出るシャワー。</p>\n<h2>解法</h2>\n<p>考えるべきパターンは2つ。</p>\n<ol>\n<li>お湯が出終わってからスイッチを押す</li>\n<li>お湯が出ている状態でスイッチを押す\nこれらは下図の\\(x\\)が0以上かそうでないかで場合分けできる。</li>\n</ol>\n<p><img src=\"/posts_images/2019-04-08-abc_c/abc060c.png\" alt=\"abc060C\"></p>\n<ol>\n<li>お湯が出終わってからスイッチを押す（\\(x \\geq 0\\)のとき）\n<ul>\n<li>\\(T\\)秒増える</li>\n</ul>\n</li>\n<li>お湯が出ている状態でスイッチを押す（\\(x&lt;0\\)のとき）\n<ul>\n<li>\\(T+x\\)秒増える</li>\n</ul>\n</li>\n</ol>\n<p>各時刻についてみていき、パターンに応じて秒数を合計していけば答えが求まる。</p>\n<h1>ABC099 C - Strange Bank</h1>\n<p><a href=\"https://atcoder.jp/contests/abc099/tasks/abc099_c\">C - Strange Bank</a></p>\n<h2>学び</h2>\n<ul>\n<li>べき乗を考えるだけで例えばべき乗ではない\\(6\\)の倍数\\(12\\)円とかが埋まるのが直感的にわからない</li>\n</ul>\n<h1>ABC100 C - Linear Approximation</h1>\n<p><a href=\"https://atcoder.jp/contests/arc100/tasks/arc100_a\">C - Linear Approximation</a></p>\n<h2>解法</h2>\n<p><a href=\"https://atcoder.jp/contests/abc102/submissions/5209404\">submission</a></p>\n<h2>学び</h2>\n<p>\\(A_i-i\\)を点として数直線上にプロットしてみるという発想が必要だった。\nその発想は\\(|A_i-i - b|\\)が\\(b\\)からの距離だという視点から生まれる。\n絶対値を見たら数直線上の距離に当てはめられないか検討するべきか。\nあとは中央値の求め方を学べる。</p>\n<h1>ABC106 C - To Infinity</h1>\n<p><a href=\"https://atcoder.jp/contests/abc106/tasks/abc106_c\">C - To Infinity</a></p>\n<h2>解法</h2>\n<h2>学び</h2>\n<ul>\n<li>数の大きさで怖気付いてはいけない\n<ul>\n<li>試すべきだったのは、入力の値と5000兆日後の文字数の比較</li>\n</ul>\n</li>\n</ul>\n<h1>ABC125 C - GCD on Blackboard</h1>\n<h2>学び</h2>\n<p>gcdはどの順序で計算しても変わらない。\n0と9のgcdは9。</p>\n<h1>問題ステータス</h1>\n<p>各問題で使用した手法や考え方のメモと、くさころの個人的な解答状況。\nStatusは「o: 完全に理解した」、「r: 解いたけど要復習」、「x: まったくわからない」を意味する。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Contest Name</th>\n<th>Comment</th>\n<th style=\"text-align:center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ABC001</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC002</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC003</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC004</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC005</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC006</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC007</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC008</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC009</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC010</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC011</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC012</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC013</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC014</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC015</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC016</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC017</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC018</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC019</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC020</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC021</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC022</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC023</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC024</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC025</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC026</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC027</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC028</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC029</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC030</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC031</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC032</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC033</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC034</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC035</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC036</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC037</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC038</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC039</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC040</td>\n<td><code>DP</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC041</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC042</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC043</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC044</td>\n<td><code>DP</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC045</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC046</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC047</td>\n<td>境界の処理本当に気をつけて</td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC048</td>\n<td>境界の処理本当に気をつけて</td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC049</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC050</td>\n<td><code>Counter</code>の練習。問題文よく読まず10**9+7の剰余にしてなくて1回WA</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC051</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC052</td>\n<td>10**9+7の剰余を答えるの忘れがち</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC053</td>\n<td>コーナーケースに気づかず数回WA</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC054</td>\n<td>無向グラフの作り方。<code>DFS</code>, <code>itertools</code>, <code>permutations</code>, <code>set()</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC055</td>\n<td>わずかだが根本的な条件のミスによりWA</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC056</td>\n<td>カンガルー</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC057</td>\n<td>丁寧にやれば解ける。が、極端なケースでミスって1WA</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC058</td>\n<td>a to zの列挙</td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC059</td>\n<td><code>必要な操作回数の最小値</code></td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC060</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC061</td>\n<td>発想が足りなすぎた</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC062</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC063</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC064</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC065</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC066</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC067</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC068</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC069</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC070</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC071</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC072</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC073</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC074</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC075</td>\n<td><code>DFS</code>, <code>BFS</code>, <code>Union-Find</code>, <code>ワーシャルフロイド</code>。嘘DFSしてた。</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC076</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC077</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC078</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC079</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC080</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC081</td>\n<td></td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC082</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC083</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC084</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC085</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC086</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC087</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC088</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC089</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC090</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC091</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC092</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC093</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC094</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC095</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC096</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC097</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC098</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC099</td>\n<td><code>DP</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC100</td>\n<td><code>中央値</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC101</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC102</td>\n<td></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC103</td>\n<td>mod最大化</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC104</td>\n<td>貪欲？</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC105</td>\n<td>-2進数</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC106</td>\n<td>5000兆日</td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC107</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC108</td>\n<td>Kの倍数となる整数の組</td>\n<td style=\"text-align:center\">o</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC109</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC110</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC111</td>\n<td></td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC112</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC113</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC114</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC115</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC116</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC117</td>\n<td></td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC118</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC119</td>\n<td></td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC120</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC121</td>\n<td></td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC122</td>\n<td><code>累積和</code></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC123</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC124</td>\n<td></td>\n<td style=\"text-align:center\">r</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ABC125</td>\n<td><code>累積gcd</code>, gcdの結合則</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n</tbody>\n</table>\n",
  "dir": "contents/posts",
  "base": "2019-04-08-abc_c.json",
  "ext": ".json",
  "sourceBase": "2019-04-08-abc_c.md",
  "sourceExt": ".md"
}