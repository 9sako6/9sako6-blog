{
  "title": "[Nuxt.js]Makdownで記事を書けるSPAブログを自作する",
  "description": "Nuxt.jsでSPAブログを作る。Markdownで記事を書き、processmdでHTMLに変換し、Nuxt.jsで静的ファイルを生成し、firebaseでホスティング...",
  "tags": [
    "Nuxt.js"
  ],
  "created_at": "2019-04-21T00:00:00.000Z",
  "bodyContent": "**（執筆中）**\n\n# Nuxt.jsでブログ作り\nフロント周りの勉強を兼ねて、\n**Nuxt.js**でオリジナルブログを作っています（このブログです）。\nやってることをざっくりまとめるとこんな感じです。\n\n- Markdownで記事を書き、**processmd**でHTMLに変換\n- **Nuxt.js**で静的ファイル生成\n- **firebase**でホスティング\n\nそれぞれについて簡単に説明していきます。\n\n## Markdownで記事を書き、**processmd**でHTMLに変換\n**（執筆中）**\n## **Nuxt.js**で静的ファイル生成\n**（執筆中）**\n## **firebase**でホスティング\n\nfirebaseの使い方はこちらの記事によくまとまっているので説明は省きます。\n\n- [Firebaseの始め方 - Qiita](https://qiita.com/kohashi/items/43ea22f61ade45972881)\n\nやることはシンプルで、だいたい下の通りです。\n\n```shell\nnpm install -g firebase-tools // まだインストールしてなければ\nfirebase login\nfirebase init                 // 色々聞かれるので必要な項目を選ぶ\nfirebase serve                // ローカルでサイト立ち上げ\nfirebase deploy               // デプロイ\n```\n\n\n# コメント欄をつける\n**utteranc.es**を使うとこんな感じのコメント欄を簡単に作れます。\n\n![comment form](/posts_images/2019-04-21-nuxt_blog/comment.png)\n\n[https://utteranc.es/](https://utteranc.es/)に色々説明が書いてあるんですが、\n以下のスクリプトタグを自分のページに貼り付けるだけでコメント欄ができます。\n\n```html\n<script src=\"https://utteranc.es/client.js\"\n  repo=\"[ENTER REPO HERE]\"\n  issue-term=\"pathname\"\n  theme=\"github-light\"\n  crossorigin=\"anonymous\"\n  async>\n</script>\n```\n\n`[ENTER REPO HERE]`には自分の`username/repository`を入れます。\n\n\nコメントはGitHubのissuesに届きます。\n![comment form](/posts_images/2019-04-21-nuxt_blog/comment_issues.png)\nissuesで削除したコメントはサイトからも削除されます。\n\nコメントするためにはGitHubアカウントが必要なんですが、それがむしろちょうどいいスパムフィルタになってると思ってます。\n\n# サイトパフォーマンスの向上\n次はサイトパフォーマンスを向上させます。\n何も対策をしていない時のLighthouseでのスコアはこんな感じでした。\n\n![perf_before](/posts_images/2019-04-21-nuxt_blog/perf_before.png)\n\n何もしていないのに既に高いパフォーマンスを叩き出しています。\nNuxt.jsの威力を感じます。\n\nしかし、Accessibilityが極端に低いので向上させていきます。\n\n## Accessibility\n\nAccessibilityが低いのは、自分の書いたHTMLの質が悪かったからです。Accessibilityの項目をみてみると、\n\n- imgタグにalt属性を付与せよ\n\nという怒られが発生していました。これを修正しただけでパフォーマンスが改善されました。\n\n![perf_before](/posts_images/2019-04-21-nuxt_blog/perf_after.png)\n\nとはいえ、Lighthouseで測定できるAccessibilityはあくまで表面的なものです。\n本当にユーザーのことを考えると、考慮すべきことがまだありそうです。\n\n- コントラスト\n- 色使い\n- 余白\n\nなど...\n\n## Score 100\nどうせならスコアを100にしようと思って調整しました。\nとは言っても、Lighthouseに指摘された部分を修正すればよいだけです。\n\nSEOを91->100にするには**robots.txt**を作成する必要がありました。\n自分はクローラーに全ページのクロールを許可する以下のrobots.txtを作って`static`ディレクトリに設置しました。\n\n```txt\nUser-agent:*\n```\n\nそんなこんなで細かい修正をした結果、スコア100を達成できました。\n![perf_before](/posts_images/2019-04-21-nuxt_blog/perf_100.png)\n\n\n# 参考にしたサイト\n\n今回のブログを作るにあたって、Yoshihide Jimboさんの記事が大変参考になりました（というかだいたいそのままや）。\n御礼申し上げます。\n\n- [Nuxt.js で Markdown ベースのブログを構築する（Markdown 編）](https://jmblog.jp/posts/2018-01-17/build-a-blog-with-nuxtjs-and-markdown-1/)\n- [Nuxt.js で Markdown ベースのブログを構築する（Nuxt.js 編）](https://jmblog.jp/posts/2018-01-18/build-a-blog-with-nuxtjs-and-markdown-2/)\n- [Nuxt.js で Markdown ベースのブログを構築する（サイトパフォーマンス編）](https://jmblog.jp/posts/2018-01-24/build-a-blog-with-nuxtjs-and-markdown-3/)\n\n# さいごに\n\n世の中には色々なブログサービスが存在します。\nそれでも自分でブログを作る利点はあると思っています。\n例えばこんなメリットがあります。\n\n- SPAのブログを作れる\n- Web上で記事を書くわけじゃないので、編集中に突然消える危険がない（記事はGitHubにも残るし）\n\nなにより、オリジナルブログを作るのは楽しいです。\n高速なSPAのブログが手に入ったので結構満足しています。\nまだ不便なところがちょこちょこあるんですが（画像の貼り付けとか圧縮とか（今は[ImgBot](https://imgbot.net/)くんに丸投げしている））、徐々に直していくつもりです。\n\n\nこれから追加したい機能は\n\n- タグ\n- 数式の表示\n\nです。数式に関しては、Nuxt.jsで**MathJax**を使う方法がよくわからないので時間がかかるかもです。\n\n***\n\nP.S. ブログが完成したらこの記事も書き上げます。もう少し待ってて下さい。",
  "bodyHtml": "<p><strong>（執筆中）</strong></p>\n<h1>Nuxt.jsでブログ作り</h1>\n<p>フロント周りの勉強を兼ねて、\n<strong>Nuxt.js</strong>でオリジナルブログを作っています（このブログです）。\nやってることをざっくりまとめるとこんな感じです。</p>\n<ul>\n<li>Markdownで記事を書き、<strong>processmd</strong>でHTMLに変換</li>\n<li><strong>Nuxt.js</strong>で静的ファイル生成</li>\n<li><strong>firebase</strong>でホスティング</li>\n</ul>\n<p>それぞれについて簡単に説明していきます。</p>\n<h2>Markdownで記事を書き、<strong>processmd</strong>でHTMLに変換</h2>\n<p><strong>（執筆中）</strong></p>\n<h2><strong>Nuxt.js</strong>で静的ファイル生成</h2>\n<p><strong>（執筆中）</strong></p>\n<h2><strong>firebase</strong>でホスティング</h2>\n<p>firebaseの使い方はこちらの記事によくまとまっているので説明は省きます。</p>\n<ul>\n<li><a href=\"https://qiita.com/kohashi/items/43ea22f61ade45972881\">Firebaseの始め方 - Qiita</a></li>\n</ul>\n<p>やることはシンプルで、だいたい下の通りです。</p>\n<pre><code class=\"hljs\">npm install -g firebase-tools // まだインストールしてなければ\nfirebase login\nfirebase init                 // 色々聞かれるので必要な項目を選ぶ\nfirebase serve                // ローカルでサイト立ち上げ\nfirebase deploy               // デプロイ</code></pre><h1>コメント欄をつける</h1>\n<p><strong>utteranc.es</strong>を使うとこんな感じのコメント欄を簡単に作れます。</p>\n<p><img src=\"/posts_images/2019-04-21-nuxt_blog/comment.png\" alt=\"comment form\"></p>\n<p><a href=\"https://utteranc.es/\">https://utteranc.es/</a>に色々説明が書いてあるんですが、\n以下のスクリプトタグを自分のページに貼り付けるだけでコメント欄ができます。</p>\n<pre><code class=\"hljs\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://utteranc.es/client.js\"</span>\n  <span class=\"hljs-attr\">repo</span>=<span class=\"hljs-string\">\"[ENTER REPO HERE]\"</span>\n  <span class=\"hljs-attr\">issue-term</span>=<span class=\"hljs-string\">\"pathname\"</span>\n  <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"github-light\"</span>\n  <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\">\"anonymous\"</span>\n  <span class=\"hljs-attr\">async</span>&gt;</span><span class=\"undefined\">\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre><p><code>[ENTER REPO HERE]</code>には自分の<code>username/repository</code>を入れます。</p>\n<p>コメントはGitHubのissuesに届きます。\n<img src=\"/posts_images/2019-04-21-nuxt_blog/comment_issues.png\" alt=\"comment form\">\nissuesで削除したコメントはサイトからも削除されます。</p>\n<p>コメントするためにはGitHubアカウントが必要なんですが、それがむしろちょうどいいスパムフィルタになってると思ってます。</p>\n<h1>サイトパフォーマンスの向上</h1>\n<p>次はサイトパフォーマンスを向上させます。\n何も対策をしていない時のLighthouseでのスコアはこんな感じでした。</p>\n<p><img src=\"/posts_images/2019-04-21-nuxt_blog/perf_before.png\" alt=\"perf_before\"></p>\n<p>何もしていないのに既に高いパフォーマンスを叩き出しています。\nNuxt.jsの威力を感じます。</p>\n<p>しかし、Accessibilityが極端に低いので向上させていきます。</p>\n<h2>Accessibility</h2>\n<p>Accessibilityが低いのは、自分の書いたHTMLの質が悪かったからです。Accessibilityの項目をみてみると、</p>\n<ul>\n<li>imgタグにalt属性を付与せよ</li>\n</ul>\n<p>という怒られが発生していました。これを修正しただけでパフォーマンスが改善されました。</p>\n<p><img src=\"/posts_images/2019-04-21-nuxt_blog/perf_after.png\" alt=\"perf_before\"></p>\n<p>とはいえ、Lighthouseで測定できるAccessibilityはあくまで表面的なものです。\n本当にユーザーのことを考えると、考慮すべきことがまだありそうです。</p>\n<ul>\n<li>コントラスト</li>\n<li>色使い</li>\n<li>余白</li>\n</ul>\n<p>など...</p>\n<h2>Score 100</h2>\n<p>どうせならスコアを100にしようと思って調整しました。\nとは言っても、Lighthouseに指摘された部分を修正すればよいだけです。</p>\n<p>SEOを91-&gt;100にするには<strong>robots.txt</strong>を作成する必要がありました。\n自分はクローラーに全ページのクロールを許可する以下のrobots.txtを作って<code>static</code>ディレクトリに設置しました。</p>\n<pre><code class=\"hljs\">User-agent:*</code></pre><p>そんなこんなで細かい修正をした結果、スコア100を達成できました。\n<img src=\"/posts_images/2019-04-21-nuxt_blog/perf_100.png\" alt=\"perf_before\"></p>\n<h1>参考にしたサイト</h1>\n<p>今回のブログを作るにあたって、Yoshihide Jimboさんの記事が大変参考になりました（というかだいたいそのままや）。\n御礼申し上げます。</p>\n<ul>\n<li><a href=\"https://jmblog.jp/posts/2018-01-17/build-a-blog-with-nuxtjs-and-markdown-1/\">Nuxt.js で Markdown ベースのブログを構築する（Markdown 編）</a></li>\n<li><a href=\"https://jmblog.jp/posts/2018-01-18/build-a-blog-with-nuxtjs-and-markdown-2/\">Nuxt.js で Markdown ベースのブログを構築する（Nuxt.js 編）</a></li>\n<li><a href=\"https://jmblog.jp/posts/2018-01-24/build-a-blog-with-nuxtjs-and-markdown-3/\">Nuxt.js で Markdown ベースのブログを構築する（サイトパフォーマンス編）</a></li>\n</ul>\n<h1>さいごに</h1>\n<p>世の中には色々なブログサービスが存在します。\nそれでも自分でブログを作る利点はあると思っています。\n例えばこんなメリットがあります。</p>\n<ul>\n<li>SPAのブログを作れる</li>\n<li>Web上で記事を書くわけじゃないので、編集中に突然消える危険がない（記事はGitHubにも残るし）</li>\n</ul>\n<p>なにより、オリジナルブログを作るのは楽しいです。\n高速なSPAのブログが手に入ったので結構満足しています。\nまだ不便なところがちょこちょこあるんですが（画像の貼り付けとか圧縮とか（今は<a href=\"https://imgbot.net/\">ImgBot</a>くんに丸投げしている））、徐々に直していくつもりです。</p>\n<p>これから追加したい機能は</p>\n<ul>\n<li>タグ</li>\n<li>数式の表示</li>\n</ul>\n<p>です。数式に関しては、Nuxt.jsで<strong>MathJax</strong>を使う方法がよくわからないので時間がかかるかもです。</p>\n<hr>\n<p>P.S. ブログが完成したらこの記事も書き上げます。もう少し待ってて下さい。</p>\n",
  "dir": "contents/posts",
  "base": "2019-04-21-nuxt_blog.json",
  "ext": ".json",
  "sourceBase": "2019-04-21-nuxt_blog.md",
  "sourceExt": ".md"
}